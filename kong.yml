---
namespace: kong

kong-common:
  metadata:
    name: Kong
    description: |
      Kong is an open-source API gateway and microservices management layer. It is designed to help developers manage, secure, and scale their APIs and microservices. Kong is built on top of the Nginx web server and provides a plugin architecture that allows developers to extend its functionality.

      Kong provides a range of features, including:
      1. API Gateway: Kong acts as a gateway between clients and microservices, providing a single entry point for all API requests.
      2. Load Balancing: Kong can distribute traffic across multiple instances of a microservice, ensuring high availability and scalability.
      3. Authentication and Authorization: Kong provides a range of authentication and authorization plugins, including OAuth2, JWT, and Basic Authentication.
      4. Rate Limiting: Kong can limit the number of requests that clients can make to a microservice, preventing overloading and ensuring fair usage.
      5. Logging and Monitoring: Kong provides detailed logging and monitoring capabilities, allowing developers to track API usage and performance.

      Kong is a popular open-source project with a large and active community of developers. It is used by many organizations to manage their APIs and microservices, including Airbnb, The New York Times, and Zillow.

    tags: networking, containerization, load balancing, microservices, api gateway, cross-platform, security, scalability, graphql, restful apis, monitoring, service mesh, performance, devops, analytics
    website: https://konghq.com/
    publisher: monk.io
    icon: https://konghq.com/wp-content/themes/konghq/assets/img/gradient-logo.svg
    private: true
  connections:
    db:
      runnable: kong/db
      service: kong-db
  variables:
    monk_kong_database:
      env: KONG_DATABASE
      value: postgres
    monk_kong_database_name:
      env: KONG_PG_DATABASE
      value: kong
    monk_kong_database_host:
      env: KONG_PG_HOST
      value: <- connection-hostname("db") split(".dns.podman") join("")
    monk_kong_database_user:
      env: KONG_PG_USER
      value: kong
    monk_kong_database_port:
      env: KONG_PG_PORT
      value:  5432
    monk_kong_database_password:
      env: KONG_PG_PASSWORD
      value: kong

kong:
  defines: runnable
  inherits: kong/kong-common
  depends:
    wait-for:
      runnables:
        - kong/db
      timeout: 30
  containers:
    kong-migrations-up:
      image: kong
      image-tag: latest
      bash: kong migrations bootstrap && kong migrations finish
    kong-app:
      image: kong
      image-tag: latest
      environment:
        - <- `KONG_ADMIN_ACCESS_LOG=/dev/stdout`
        - <- `KONG_PROXY_ACCESS_LOG=/dev/stdout`
        - <- `KONG_ADMIN_ERROR_LOG=/dev/stderr`
        - <- `KONG_PROXY_ERROR_LOG=/dev/stderr`
        - <- `KONG_PROXY_LISTEN=0.0.0.0:8000`
        - <- `KONG_ADMIN_LISTEN=0.0.0.0:1337`
        - <- `KONG_DECLARATIVE_CONFIG="/opt/kong/kong.yaml"`
    konga:
      image: pantsel/konga
      image-tag: latest
  services:
    kong-app:
      container: kong-app
      port: 8000
      protocol: tcp
    konga:
      container: konga
      port: 1337
      protocol: tcp
      host-port: 1337

db:
  defines: runnable
  metadata:
    name: PostgreSQL
    website: https://www.postgresql.org
    source: https://github.com/postgres
    publisher: monk.io
    icon: https://www.postgresql.org/media/img/about/press/elephant.png
    tags: frameworks, object-relational, indexing, data types, query optimization, postgresql, security, open-source, mvcc, community
    description: |
      PostgreSQL is a powerful open-source object-relational database management system (DBMS) that provides robustness, reliability, and performance to meet the demanding needs of enterprise-level applications. It was first released in 1989 and has since become one of the most popular and widely used relational databases in the world.

      One of the key features of PostgreSQL is its flexibility, which allows it to be used in a wide range of applications, from small-scale projects to large, complex enterprise systems. It supports a wide range of data types, including arrays, hstore, and JSON, and provides advanced indexing and query optimization features to ensure fast and efficient data retrieval.

      PostgreSQL also has a strong reputation for data security and integrity, with support for advanced security features like row-level security, data masking, and encryption. It also supports multi-version concurrency control (MVCC), which allows multiple transactions to access and modify data concurrently without interfering with each other.

      In addition to its powerful features, PostgreSQL has a large and active community of developers and users who contribute to its development and provide support through forums, mailing lists, and other channels. It is available on multiple platforms, including Linux, Windows, and macOS, and can be used with a wide range of programming languages and frameworks, making it a versatile and reliable choice for database management in a wide range of applications.
    private: true
  variables:
    image-tag:
      type: string
      value: latest
    db-password:
      env: POSTGRES_PASSWORD
      value: kong
      type: string
    db-user:
      env: POSTGRES_USER
      value: konk
      type: string
    db-name:
      env: POSTGRES_DB
      value: kong
      type: string
    db-port:
      value: 5432
      type: int
    db-trust:
      env: POSTGRES_HOST_AUTH_METHOD
      value: trust
  containers:
    postgres:
      image-tag: <- `${image-tag}`
      paths:
        - <- `${monk-volume-path}/kong/db_data:/var/lib/postgresql/data`
      image: postgres
  services:
    kong-db:
      container: postgres
      port: 5432
      protocol: tcp
  checks:
    readiness:
      code: |
        exec("postgres", "pg_isready") "accepting connections" contains?
      period: 15
      initialDelay: 15
